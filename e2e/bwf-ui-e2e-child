node("${NODE}"){
    def user = 'dsm-bot'
	def suiteAndEnv = "${SUITE}".split('=');
	def suiteName = suiteAndEnv[0];
	def environment = suiteAndEnv[1];
	def reportDir = "${PARENTDIR}/artefact"
	stage('Clone & Build ' + suiteName) {
		git branch: 'master',
            credentialsId: user,
            url: 'https://github.bmc.com/DSM-Apps/bwf-e2e-protractor.git'
        bat "IF EXIST e2e\\reports RMDIR /S /Q e2e\\reports"
		bat "npm install"
		bat "npm run webdriver-update"
	}

	try {
		stage('Test Execution ' + suiteName) {
			bat """npm run e2e-protractor -- --baseUrl=${environment} --suite=${suiteName}"""
		}
	} catch (Exception e) {
		echo "Test Execution Failed ${suiteName} ==> " + e;
	}

	try {
		stage('Reporting ' + suiteName) {
            zip archive: false, dir: 'e2e/reports', zipFile: "e2e/reports/${suiteName}_reports.zip"
			//copy report zip to parent report folder
			bat """xcopy /Y /F /I /Z /Q "e2e/reports/${suiteName}_reports.zip" "${reportDir}/*" """
			//copy json file to parent report folder
			bat """xcopy /Y /F /I /Z /Q "e2e/reports/spec-json-report/spec-json-report.json" "${reportDir}/${suiteName}_spec-json-report.json*" """
        }
	} catch (Exception e) {
		echo "Reporting Failed ${suiteName} ==> " + e;
	}
}
