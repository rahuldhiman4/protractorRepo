import groovy.json.JsonSlurper;

def viewName = "Helix BWF";
def extn = "${EXTN}";
def jsonFileContent = readFileFromWorkspace("${JSON}");
def componentObj = new JsonSlurper().parseText(jsonFileContent);
def components = componentObj.keySet();
//----------------
components.each {
//----------------
if(it == "Total") return;
def passed = (componentObj.get(it).get("pass"));
def failed = (componentObj.get(it).get("fail"));
def skipped = (componentObj.get(it).get("skip"));
def total = (componentObj.get(it).get("total"));
def percent = (passed * 100) / total;
boolean isPar = true;
if (percent < 95) isPar = false;

def descTxt = "Tests:" + total + " Passed:" + passed + " Failed:" + failed + " Skipped:" + skipped;
pipelineJob(it + extn) {
    parameters {
      	stringParam('desc', descTxt)
      	booleanParam('isBuildPass', isPar)
    }
	definition {
		cps {
			script('''
				pipeline {
					agent {	label 'deployment' }
						stages {
							stage('SetBuildDescription') {
								steps {
									script {
										echo "test false ${isBuildPass}"
										currentBuild.description = "${desc}"
										if("${isBuildPass}" == "false") currentBuild.result = 'FAILURE'
									}
								}
							}
						}
					}
				'''.stripIndent())
				sandbox()
			}
		}
	}
}
//----------------
components.each {
//----------------
	queue(it + extn)
}

def reg = '.*' + extn;

buildMonitorView(viewName) {
    description('All jobs for PMO dashboard')
    jobs {
        regex(/${reg}/)
    }
}